
controller:
    adapters:
        config: local
        feedbackReceiver: jxscm
        store: redis

    tweaks:
        requeueDelayAfterErrorCount: "100"
        requeueDelaySecs: "15"
        requeueStopAfterErrorCount: "150"

    autoscaling:
        enabled: false
        initialReplicaCount: 1
        minReplicas: 1
        maxReplicas: 100
        targetCPUUtilizationPercentage: 80
        targetMemoryUtilizationPercentage: 80

    service:
        type: ClusterIP
        port: 8081

    serviceAccount:
        name: pipelines-feedback
        create: true
        annotations: {}

    deployment:
        image:
            repository: "-empty-"
            #tag: ""
            pullPolicy: Always
        annotations: {}
        labels: {}
        terminationGracePeriodSeconds: 10
        imagePullSecrets: {}
        podSecurityContext:
            capabilities:
                drop: [ "ALL" ]
                readOnlyRootFilesystem: true
                runAsNonRoot: true
        securityContext:
            capabilities:
                drop: [ "ALL" ]
                readOnlyRootFilesystem: true
                runAsNonRoot: true
        resources:
            limits:
                cpu: "1"
                memory: 512Mi
            requests:
                cpu: "0.2"
                memory: 64Mi
        nodeSelector: {}
        affinity: {}
        tolerations: []
        health:
            liveness:
                enabled: true
                attributes:
                    failureThreshold: 1
            readiness:
                enabled: true
                attributes: {}
        secrets:
            name: ""
        env:
            REDIS_HOST: "redis:6379"

# --------
# Security
# --------
rbac:
    # optionally limit controller's permissions to be able to reach only secrets with specified name
    secretResourceNames: []

    # optionally limit RBAC to those namespaces
    bindToNamespaces: []

    jobRules: []
#        - apiGroups: ["batch"]
#          resources: ["jobs"]
#          verbs: ["list", "get", "watch"]

# --------------------------------------------------------------------
# Redis: Deploys a Redis from Redis Operator (requires Redis Operator)
# --------------------------------------------------------------------
redis:
    enabled: false
    spec:
        kubernetesConfig:
            image: quay.io/opstree/redis:v6.2.5
            imagePullPolicy: IfNotPresent
            resources:
                limits:
                    cpu: 1
                    memory: 512Mi
                requests:
                    cpu: 100m
                    memory: 128Mi
            updateStrategy: { }
        livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
        readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
        redisExporter:
            enabled: false
            image: quay.io/opstree/redis-exporter:1.0
        storage:
            volumeClaimTemplate:
                metadata: { }
                spec:
                    accessModes:
                        - ReadWriteMany
                    resources:
                        requests:
                            storage: 512Mi
                status: { }
            volumeMount: { }
